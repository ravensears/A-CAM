{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rrs/the_look/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rrs/the_look/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/rrs/the_look/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/rrs/the_look/client/src/components/recordList.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nvar Record = function Record(props) {\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, props.record.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, props.record.position), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }\n  }, props.record.level), /*#__PURE__*/React.createElement(\"td\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"btn btn-link\",\n    to: \"/edit/\".concat(props.record._id),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }, \"Edit\"), \" \", \"|\", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-link\",\n    onClick: function onClick() {\n      props.deleteRecord(props.record._id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Delete\")));\n};\n\nexport default function RecordList() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      records = _useState2[0],\n      setRecords = _useState2[1]; // This method fetches the records from the database.\n\n\n  useEffect(function () {\n    function getRecords() {\n      return _getRecords.apply(this, arguments);\n    }\n\n    function _getRecords() {\n      _getRecords = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response, message, records;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://localhost:5000/record/\");\n\n              case 2:\n                response = _context.sent;\n\n                if (response.ok) {\n                  _context.next = 7;\n                  break;\n                }\n\n                message = \"An error occurred: \".concat(response.statusText);\n                window.alert(message);\n                return _context.abrupt(\"return\");\n\n              case 7:\n                _context.next = 9;\n                return response.json();\n\n              case 9:\n                records = _context.sent;\n                setRecords(records);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getRecords.apply(this, arguments);\n    }\n\n    getRecords();\n    return;\n  }, [records.length]); // This method will delete a record\n\n  function _deleteRecord2(_x) {\n    return _deleteRecord.apply(this, arguments);\n  } // This method will map out the records on the table\n\n\n  function _deleteRecord() {\n    _deleteRecord = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(id) {\n      var newRecords;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return fetch(\"http://localhost:5000/\".concat(id), {\n                method: \"DELETE\"\n              });\n\n            case 2:\n              newRecords = records.filter(function (el) {\n                return el._id !== id;\n              });\n              setRecords(newRecords);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _deleteRecord.apply(this, arguments);\n  }\n\n  function recordList() {\n    var _this2 = this;\n\n    return records.map(function (record) {\n      return /*#__PURE__*/React.createElement(Record, {\n        record: record,\n        deleteRecord: function deleteRecord() {\n          return _deleteRecord2(record._id);\n        },\n        key: record._id,\n        __self: _this2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      });\n    });\n  } // This following section will display the table with the records of individuals.\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, \"Record List\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table table-striped\",\n    style: {\n      marginTop: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Position\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Level\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, recordList())));\n}","map":{"version":3,"sources":["/Users/rrs/the_look/client/src/components/recordList.js"],"names":["React","useEffect","useState","Link","Record","props","record","name","position","level","_id","deleteRecord","RecordList","records","setRecords","getRecords","fetch","response","ok","message","statusText","window","alert","json","length","id","method","newRecords","filter","el","recordList","map","marginTop"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD;AAAA,sBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,MAAN,CAAaC,IAAlB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKF,KAAK,CAACC,MAAN,CAAaE,QAAlB,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKH,KAAK,CAACC,MAAN,CAAaG,KAAlB,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,EAAE,kBAAWJ,KAAK,CAACC,MAAN,CAAaI,GAAxB,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAGU,GAHV,oBAKE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbL,MAAAA,KAAK,CAACM,YAAN,CAAmBN,KAAK,CAACC,MAAN,CAAaI,GAAhC;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,CAJF,CADa;AAAA,CAAf;;AAsBA,eAAe,SAASE,UAAT,GAAsB;AAAA,kBACLV,QAAQ,CAAC,EAAD,CADH;AAAA;AAAA,MAC5BW,OAD4B;AAAA,MACnBC,UADmB,kBAGnC;;;AACAb,EAAAA,SAAS,CAAC,YAAM;AAAA,aACCc,UADD;AAAA;AAAA;;AAAA;AAAA,6EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACyBC,KAAK,iCAD9B;;AAAA;AACQC,gBAAAA,QADR;;AAAA,oBAGOA,QAAQ,CAACC,EAHhB;AAAA;AAAA;AAAA;;AAIUC,gBAAAA,OAJV,gCAI0CF,QAAQ,CAACG,UAJnD;AAKIC,gBAAAA,MAAM,CAACC,KAAP,CAAaH,OAAb;AALJ;;AAAA;AAAA;AAAA,uBASwBF,QAAQ,CAACM,IAAT,EATxB;;AAAA;AASQV,gBAAAA,OATR;AAUEC,gBAAAA,UAAU,CAACD,OAAD,CAAV;;AAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADc;AAAA;AAAA;;AAcdE,IAAAA,UAAU;AAEV;AACD,GAjBQ,EAiBN,CAACF,OAAO,CAACW,MAAT,CAjBM,CAAT,CAJmC,CAuBnC;;AAvBmC,WAwBpBb,cAxBoB;AAAA;AAAA,IAiCnC;;;AAjCmC;AAAA,6EAwBnC,kBAA4Bc,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQT,KAAK,iCAA0BS,EAA1B,GAAgC;AACzCC,gBAAAA,MAAM,EAAE;AADiC,eAAhC,CADb;;AAAA;AAKQC,cAAAA,UALR,GAKqBd,OAAO,CAACe,MAAR,CAAe,UAACC,EAAD;AAAA,uBAAQA,EAAE,CAACnB,GAAH,KAAWe,EAAnB;AAAA,eAAf,CALrB;AAMEX,cAAAA,UAAU,CAACa,UAAD,CAAV;;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAxBmC;AAAA;AAAA;;AAkCnC,WAASG,UAAT,GAAsB;AAAA;;AACpB,WAAOjB,OAAO,CAACkB,GAAR,CAAY,UAACzB,MAAD,EAAY;AAC7B,0BACE,oBAAC,MAAD;AACE,QAAA,MAAM,EAAEA,MADV;AAEE,QAAA,YAAY,EAAE;AAAA,iBAAMK,cAAY,CAACL,MAAM,CAACI,GAAR,CAAlB;AAAA,SAFhB;AAGE,QAAA,GAAG,EAAEJ,MAAM,CAACI,GAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAOD,KARM,CAAP;AASD,GA5CkC,CA8CnC;;;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,eAEE;AAAO,IAAA,SAAS,EAAC,qBAAjB;AAAuC,IAAA,KAAK,EAAE;AAAEsB,MAAAA,SAAS,EAAE;AAAb,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,CADF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQF,UAAU,EAAlB,CATF,CAFF,CADF;AAgBD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Record = (props) => (\n  <tr>\n    <td>{props.record.name}</td>\n    <td>{props.record.position}</td>\n    <td>{props.record.level}</td>\n    <td>\n      <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>\n        Edit\n      </Link>{\" \"}\n      |\n      <button\n        className=\"btn btn-link\"\n        onClick={() => {\n          props.deleteRecord(props.record._id);\n        }}\n      >\n        Delete\n      </button>\n    </td>\n  </tr>\n);\n\nexport default function RecordList() {\n  const [records, setRecords] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5000/record/`);\n\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const records = await response.json();\n      setRecords(records);\n    }\n\n    getRecords();\n\n    return;\n  }, [records.length]);\n\n  // This method will delete a record\n  async function deleteRecord(id) {\n    await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\",\n    });\n\n    const newRecords = records.filter((el) => el._id !== id);\n    setRecords(newRecords);\n  }\n\n  // This method will map out the records on the table\n  function recordList() {\n    return records.map((record) => {\n      return (\n        <Record\n          record={record}\n          deleteRecord={() => deleteRecord(record._id)}\n          key={record._id}\n        />\n      );\n    });\n  }\n\n  // This following section will display the table with the records of individuals.\n  return (\n    <div>\n      <h3>Record List</h3>\n      <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Position</th>\n            <th>Level</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>{recordList()}</tbody>\n      </table>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}