{"ast":null,"code":"import _objectSpread from \"/Users/rrs/the_look/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _regeneratorRuntime from \"/Users/rrs/the_look/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rrs/the_look/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/rrs/the_look/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/rrs/the_look/client/src/components/edit.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nexport default function Edit() {\n  var _useState = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n    records: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      form = _useState2[0],\n      setForm = _useState2[1];\n\n  var params = useParams();\n  var navigate = useNavigate();\n  useEffect(function () {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var id, response, message, record;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                id = params.id.toString();\n                _context.next = 3;\n                return fetch(\"http://localhost:5000/record/\".concat(params.id.toString()));\n\n              case 3:\n                response = _context.sent;\n\n                if (response.ok) {\n                  _context.next = 8;\n                  break;\n                }\n\n                message = \"An error has occurred: \".concat(response.statusText);\n                window.alert(message);\n                return _context.abrupt(\"return\");\n\n              case 8:\n                _context.next = 10;\n                return response.json();\n\n              case 10:\n                record = _context.sent;\n\n                if (record) {\n                  _context.next = 15;\n                  break;\n                }\n\n                window.alert(\"Record with id \".concat(id, \" not found\"));\n                navigate(\"/\");\n                return _context.abrupt(\"return\");\n\n              case 15:\n                setForm(record);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n    return;\n  }, [params.id, navigate]); // These methods will update the state properties.\n\n  function updateForm(value) {\n    return setForm(function (prev) {\n      return _objectSpread({}, prev, value);\n    });\n  }\n\n  function onSubmit(_x) {\n    return _onSubmit.apply(this, arguments);\n  } // This following section will display the form that takes input from the user to update the data.\n\n\n  function _onSubmit() {\n    _onSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      var editedPerson;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              e.preventDefault();\n              editedPerson = {\n                name: form.name,\n                position: form.position,\n                level: form.level\n              }; // This will send a post request to update the data in the database.\n\n              _context2.next = 4;\n              return fetch(\"http://localhost:5000/update/\".concat(params.id), {\n                method: \"POST\",\n                body: JSON.stringify(editedPerson),\n                headers: {\n                  \"Content-Type\": \"application/json\"\n                }\n              });\n\n            case 4:\n              navigate(\"/\");\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _onSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"Update Record\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Name: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"name\",\n    value: form.name,\n    onChange: function onChange(e) {\n      return updateForm({\n        name: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"position\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Position: \"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    id: \"position\",\n    value: form.position,\n    onChange: function onChange(e) {\n      return updateForm({\n        position: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"positionOptions\",\n    id: \"positionIntern\",\n    value: \"Intern\",\n    checked: form.level === \"Intern\",\n    onChange: function onChange(e) {\n      return updateForm({\n        level: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"positionIntern\",\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Intern\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"positionOptions\",\n    id: \"positionJunior\",\n    value: \"Junior\",\n    checked: form.level === \"Junior\",\n    onChange: function onChange(e) {\n      return updateForm({\n        level: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"positionJunior\",\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Junior\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    type: \"radio\",\n    name: \"positionOptions\",\n    id: \"positionSenior\",\n    value: \"Senior\",\n    checked: form.level === \"Senior\",\n    onChange: function onChange(e) {\n      return updateForm({\n        level: e.target.value\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"positionSenior\",\n    className: \"form-check-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Senior\"))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Update Record\",\n    className: \"btn btn-primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/rrs/the_look/client/src/components/edit.js"],"names":["React","useState","useEffect","useParams","useNavigate","Edit","name","position","level","records","form","setForm","params","navigate","fetchData","id","toString","fetch","response","ok","message","statusText","window","alert","json","record","updateForm","value","prev","onSubmit","e","preventDefault","editedPerson","method","body","JSON","stringify","headers","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\n\nexport default function Edit() {\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n    records: [],\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(\n        `http://localhost:5000/record/${params.id.toString()}`\n      );\n\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPerson = {\n      name: form.name,\n      position: form.position,\n      level: form.level,\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`http://localhost:5000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return (\n    <div>\n      <h3>Update Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"position\">Position: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"position\"\n            value={form.position}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionIntern\"\n              value=\"Intern\"\n              checked={form.level === \"Intern\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionIntern\" className=\"form-check-label\">\n              Intern\n            </label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionJunior\"\n              value=\"Junior\"\n              checked={form.level === \"Junior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionJunior\" className=\"form-check-label\">\n              Junior\n            </label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionSenior\"\n              value=\"Senior\"\n              checked={form.level === \"Senior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionSenior\" className=\"form-check-label\">\n              Senior\n            </label>\n          </div>\n        </div>\n        <br />\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Update Record\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}