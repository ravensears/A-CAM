{"version":3,"sources":["components/navbar.js","components/recordList.js","components/edit.js","components/create.js","App.js","index.js"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","style","width","src","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Record","props","record","name","position","level","concat","_id","onClick","deleteRecord","RecordList","_useState","useState","_useState2","Object","slicedToArray","records","setRecords","_deleteRecord","asyncToGenerator","regenerator_default","mark","_callee2","newRecords","wrap","_context2","prev","next","fetch","method","filter","el","stop","apply","this","arguments","useEffect","_getRecords","_callee","response","message","_context","sent","ok","statusText","window","alert","abrupt","json","getRecords","length","marginTop","map","recordList_Record","_x","key","Edit","form","setForm","params","useParams","navigate","useNavigate","updateForm","value","objectSpread","_onSubmit","e","editedPerson","preventDefault","body","JSON","stringify","headers","Content-Type","_fetchData","toString","fetchData","onSubmit","htmlFor","onChange","target","checked","Create","newPerson","catch","error","App","react_router","exact","path","element","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.c1d6d851.chunk.js","sourcesContent":["import React from \"react\";\n\n// We import bootstrap to make our application look better.\nimport \"bootstrap/dist/css/bootstrap.css\";\n\n// We import NavLink to utilize the react router.\nimport { NavLink } from \"react-router-dom\";\n\n// Here, we display our Navbar\nexport default function Navbar() {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n        <NavLink className=\"navbar-brand\" to=\"/\">\n          {/* eslint-disable-next-line */}\n          <img\n            style={{ width: 25 + \"%\" }}\n            src=\"https://d3cy9zhslanhfa.cloudfront.net/media/3800C044-6298-4575-A05D5C6B7623EE37/4B45D0EC-3482-4759-82DA37D8EA07D229/webimage-8A27671A-8A53-45DC-89D7BF8537F15A0D.png\"\n          ></img>\n        </NavLink>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarSupportedContent\"\n          aria-controls=\"navbarSupportedContent\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/create\">\n                Create Record\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Record = (props) => (\n  <tr>\n    <td>{props.record.name}</td>\n    <td>{props.record.position}</td>\n    <td>{props.record.level}</td>\n    <td>\n      <Link className=\"btn btn-link\" to={`/edit/${props.record._id}`}>\n        Edit\n      </Link>{\" \"}\n      |\n      <button\n        className=\"btn btn-link\"\n        onClick={() => {\n          props.deleteRecord(props.record._id);\n        }}\n      >\n        Delete\n      </button>\n    </td>\n  </tr>\n);\n\nexport default function RecordList() {\n  const [records, setRecords] = useState([]);\n\n  // This method fetches the records from the database.\n  useEffect(() => {\n    async function getRecords() {\n      const response = await fetch(`http://localhost:5000/record/`);\n\n      if (!response.ok) {\n        const message = `An error occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const records = await response.json();\n      setRecords(records);\n    }\n\n    getRecords();\n\n    return;\n  }, [records.length]);\n\n  // This method will delete a record\n  async function deleteRecord(id) {\n    await fetch(`http://localhost:5000/${id}`, {\n      method: \"DELETE\",\n    });\n\n    const newRecords = records.filter((el) => el._id !== id);\n    setRecords(newRecords);\n  }\n\n  // This method will map out the records on the table\n  function recordList() {\n    return records.map((record) => {\n      return (\n        <Record\n          record={record}\n          deleteRecord={() => deleteRecord(record._id)}\n          key={record._id}\n        />\n      );\n    });\n  }\n\n  // This following section will display the table with the records of individuals.\n  return (\n    <div>\n      <h3>Record List</h3>\n      <table className=\"table table-striped\" style={{ marginTop: 20 }}>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Position</th>\n            <th>Level</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n        <tbody>{recordList()}</tbody>\n      </table>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\n\nexport default function Edit() {\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n    records: [],\n  });\n  const params = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function fetchData() {\n      const id = params.id.toString();\n      const response = await fetch(\n        `http://localhost:5000/record/${params.id.toString()}`\n      );\n\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n\n      const record = await response.json();\n      if (!record) {\n        window.alert(`Record with id ${id} not found`);\n        navigate(\"/\");\n        return;\n      }\n\n      setForm(record);\n    }\n\n    fetchData();\n\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    const editedPerson = {\n      name: form.name,\n      position: form.position,\n      level: form.level,\n    };\n\n    // This will send a post request to update the data in the database.\n    await fetch(`http://localhost:5000/update/${params.id}`, {\n      method: \"POST\",\n      body: JSON.stringify(editedPerson),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes input from the user to update the data.\n  return (\n    <div>\n      <h3>Update Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"position\">Position: </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"position\"\n            value={form.position}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionIntern\"\n              value=\"Intern\"\n              checked={form.level === \"Intern\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionIntern\" className=\"form-check-label\">\n              Intern\n            </label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionJunior\"\n              value=\"Junior\"\n              checked={form.level === \"Junior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionJunior\" className=\"form-check-label\">\n              Junior\n            </label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionSenior\"\n              value=\"Senior\"\n              checked={form.level === \"Senior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionSenior\" className=\"form-check-label\">\n              Senior\n            </label>\n          </div>\n        </div>\n        <br />\n\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Update Record\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\n\nexport default function Create() {\n  const [form, setForm] = useState({\n    name: \"\",\n    position: \"\",\n    level: \"\",\n  });\n  const navigate = useNavigate();\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm((prev) => {\n      return { ...prev, ...value };\n    });\n  }\n\n  // This function will handle the submission.\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    // When a post request is sent to the create url, we'll add a new record to the database.\n    const newPerson = { ...form };\n\n    await fetch(\"http://localhost:5000/record/add\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(newPerson),\n    }).catch((error) => {\n      window.alert(error);\n      return;\n    });\n\n    setForm({ name: \"\", position: \"\", level: \"\" });\n    navigate(\"/\");\n  }\n\n  // This following section will display the form that takes the input from the user.\n  return (\n    <div>\n      <h3>Create New Record</h3>\n      <form onSubmit={onSubmit}>\n        <div className=\"form-group\">\n          <label htmlFor=\"name\">Name</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"name\"\n            value={form.name}\n            onChange={(e) => updateForm({ name: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label htmlFor=\"position\">Position</label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"position\"\n            value={form.position}\n            onChange={(e) => updateForm({ position: e.target.value })}\n          />\n        </div>\n        <div className=\"form-group\">\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionIntern\"\n              value=\"Intern\"\n              checked={form.level === \"Intern\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionIntern\" className=\"form-check-label\">\n              Intern\n            </label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionJunior\"\n              value=\"Junior\"\n              checked={form.level === \"Junior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionJunior\" className=\"form-check-label\">\n              Junior\n            </label>\n          </div>\n          <div className=\"form-check form-check-inline\">\n            <input\n              className=\"form-check-input\"\n              type=\"radio\"\n              name=\"positionOptions\"\n              id=\"positionSenior\"\n              value=\"Senior\"\n              checked={form.level === \"Senior\"}\n              onChange={(e) => updateForm({ level: e.target.value })}\n            />\n            <label htmlFor=\"positionSenior\" className=\"form-check-label\">\n              Senior\n            </label>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <input\n            type=\"submit\"\n            value=\"Create person\"\n            className=\"btn btn-primary\"\n          />\n        </div>\n      </form>\n    </div>\n  );\n}\n","import React from \"react\";\n\n// We use Route in order to define the different routes of our application\nimport { Route, Routes } from \"react-router-dom\";\n\n// We import all the components we need in our app\nimport Navbar from \"./components/navbar\";\nimport RecordList from \"./components/recordList\";\nimport Edit from \"./components/edit\";\nimport Create from \"./components/create\";\n\nconst App = () => {\n  return (\n    <div>\n      <Navbar />\n      <Routes>\n        <Route exact path=\"/\" element={<RecordList />} />\n        <Route path=\"/edit/:id\" element={<Edit />} />\n        <Route path=\"/create\" element={<Create />} />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}